{"version":3,"sources":["components/card/Card-component.js","components/card-list/Card-list-component.js","components/search-component/Search-component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","Search","type","placeholder","onChange","ChangeHandler","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,mBAEL,6BAAKL,EAAMI,QAAQE,WCNZC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,aAAf,SACGD,EAAMQ,SAASC,KAAI,SAACL,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdK,G,MAAS,SAACV,GACrB,OACE,uBACEC,UAAU,gBACVU,KAAK,SACLC,YAAaZ,EAAMY,YACnBC,SAAUb,EAAMc,kBCiCPC,E,kDApCb,aAAe,IAAD,8BACZ,gBAYFD,cAAgB,SAACE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAK/C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAACzB,GAAD,OACvCA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,iBACZE,cAAea,KAAKb,gBAEtB,oDAAuBa,KAAKN,MAAMH,eAClC,cAAC,EAAD,CAAUV,SAAUoB,W,GA/BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1a75673b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-style.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?size=180x180`}\r\n      ></img>\r\n      <h4>{props.monster.name}</h4>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list-style.css\";\r\nimport { Card } from \"../card/Card-component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card__list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-style.css\";\r\n\r\nexport const Search = (props) => {\r\n  return (\r\n    <input\r\n      className=\"input__search\"\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.ChangeHandler}\r\n    ></input>\r\n  );\r\n};\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/Card-list-component\";\nimport { Search } from \"./components/search-component/Search-component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  ChangeHandler = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const FilteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Search Monsters</h1>\n        <Search\n          placeholder=\"search mosters\"\n          ChangeHandler={this.ChangeHandler}\n        />\n        <h3>names with search {this.state.searchField}</h3>\n        <CardList monsters={FilteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}